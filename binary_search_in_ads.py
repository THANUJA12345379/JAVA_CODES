# -*- coding: utf-8 -*-
"""Binary search in ADS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZpgVayPBD3BDDw0SeWnFraOswo_wiQJE
"""

#Binary_Search(list,key_value):
#algorithm
#1)set low=0
#2)set high=length of the list -1
#3)while low<high:
    #mid=(low+high)/2
    #if key_value==list[mid],then
          # return mid
     #elif  key_value<list[mid],then
          #High=mid+1
     #else
        #low=mid-1
#4)return -1

def binary_search(lst, key_value):
    # Step 1: Initialize low and high
    low = 0
    high = len(lst) - 1

    # Step 3: Loop until low is less than or equal to high
    while low <= high:
        # Calculate mid index
        mid = (low + high) // 2

        # Check if key_value is found at mid
        if lst[mid] == key_value:
            return mid
        # If key_value is smaller, search the left half
        elif key_value < lst[mid]:
            high = mid - 1
        # If key_value is larger, search the right half
        else:
            low = mid + 1

    # Step 4: If not found, return -1
    return -1

# Example usage
list_to_search = [1, 3, 5, 7, 9, 11]
key = 7
result = binary_search(list_to_search, key)

if result != -1:
    print(f"Key found at index {result}")
else:
    print("Key not found")